{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toogleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n// \tif (action.type === 'increment') {\n// \t\treturn {\n// \t\t\tcounter: state.counter + 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === 'increase') {\n// \t\treturn {\n// \t\t\tcounter: state.counter + action.amount,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === 'decrement') {\n// \t\treturn {\n// \t\t\tcounter: state.counter - 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === 'toogle') {\n// \t\treturn {\n// \t\t\tshowCounter: !state.showCounter,\n// \t\t\tcounter: state.counter,\n// \t\t};\n// \t}\n\n// \treturn state;\n// };\n\n// const store = createStore(counterReducer);\n\nconst store = createStore(counterSlice.reducer);\nexport default store;","map":{"version":3,"names":["createStore","createSlice","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toogleCounter","store","reducer"],"sources":["C:/Users/BRUNO/Downloads/Redux Project/src/store/index.js"],"sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\n\r\nconst counterSlice = createSlice({\r\n  name:'counter',\r\n  initialState: initialState,\r\n  reducers:{\r\n    increment (state) {\r\n      state.counter ++;\r\n    },\r\n    decrement (state) {\r\n      state.counter --;\r\n    },\r\n    increase (state, action) {\r\n      state.counter = state.counter +action.amount;\r\n    },\r\n    toogleCounter(state) {\r\n      state.showCounter= !state.showCounter;\r\n    }\r\n  }\r\n});\r\n\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n// \tif (action.type === 'increment') {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === 'increase') {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + action.amount,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === 'decrement') {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter - 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === 'toogle') {\r\n// \t\treturn {\r\n// \t\t\tshowCounter: !state.showCounter,\r\n// \t\t\tcounter: state.counter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \treturn state;\r\n// };\r\n\r\n// const store = createStore(counterReducer);\r\n\r\n\r\nconst store = createStore(counterSlice.reducer)\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAGtD,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAC,SAAS;EACdJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAC;IACPC,SAASA,CAAEC,KAAK,EAAE;MAChBA,KAAK,CAACN,OAAO,EAAG;IAClB,CAAC;IACDO,SAASA,CAAED,KAAK,EAAE;MAChBA,KAAK,CAACN,OAAO,EAAG;IAClB,CAAC;IACDQ,QAAQA,CAAEF,KAAK,EAAEG,MAAM,EAAE;MACvBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAES,MAAM,CAACC,MAAM;IAC9C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAE,CAACK,KAAK,CAACL,WAAW;IACvC;EACF;AACF,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,MAAMW,KAAK,GAAGf,WAAW,CAACK,YAAY,CAACW,OAAO,CAAC;AAE/C,eAAeD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}