{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from './counter';\nimport authReducer from './auth';\n\n// const counterReducer = (state = initialState, action) => {\n// \tif (action.type === 'increment') {\n// \t\treturn {\n// \t\t\tcounter: state.counter + 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === 'increase') {\n// \t\treturn {\n// \t\t\tcounter: state.counter + action.amount,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === 'decrement') {\n// \t\treturn {\n// \t\t\tcounter: state.counter - 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === 'toogle') {\n// \t\treturn {\n// \t\t\tshowCounter: !state.showCounter,\n// \t\t\tcounter: state.counter,\n// \t\t};\n// \t}\n\n// \treturn state;\n// };\n\n// const store = createStore(counterReducer);\n\nconst store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","counter","auth","authSlice","counterActions","counterSlice","actions","authActions"],"sources":["C:/Users/BRUNO/Downloads/Redux Project/src/store/index.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport  counterReducer from './counter';\r\nimport  authReducer from './auth'\r\n\r\n\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n// \tif (action.type === 'increment') {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === 'increase') {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + action.amount,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === 'decrement') {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter - 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === 'toogle') {\r\n// \t\treturn {\r\n// \t\t\tshowCounter: !state.showCounter,\r\n// \t\t\tcounter: state.counter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \treturn state;\r\n// };\r\n\r\n// const store = createStore(counterReducer);\r\n\r\n\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {counter: counterReducer, auth:authSlice.reducer}\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\nexport const authActions= authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAQC,cAAc,MAAM,WAAW;AACvC,OAAQC,WAAW,MAAM,QAAQ;;AAIjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAKA,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IAACC,OAAO,EAAEJ,cAAc;IAAEK,IAAI,EAACC,SAAS,CAACH;EAAO;AAC3D,CAAC,CAAC;AAEF,OAAO,MAAMI,cAAc,GAAGC,YAAY,CAACC,OAAO;AAClD,OAAO,MAAMC,WAAW,GAAEJ,SAAS,CAACG,OAAO;AAE3C,eAAeP,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}